{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","contact","payload","id","shortid","generate","deleteContact","filterContacts","contacts","createReducer","name","number","state","action","filter","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","rootReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","getContacts","getFilter","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","target","value","onSubmit","e","preventDefault","currentTarget","find","el","alert","actions","className","s","label","type","input","pattern","title","required","onChange","button","ContactList","visibleContacts","toLowerCase","includes","list","map","deleteButton","onClick","Filter","filterValue","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e56ce366.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__35vAP\",\"deleteButton\":\"ContactList_deleteButton__1r6Xl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__19Pl-\",\"input\":\"Filter_input__1lsca\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction('phoneBook/addContact', contact => {\r\n  return {\r\n    payload: {\r\n      ...contact,\r\n      id: shortid.generate(),\r\n    },\r\n  };\r\n});\r\nexport const deleteContact = createAction('phoneBook/deleteContact');\r\nexport const filterContacts = createAction('phoneBook/filter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts } from './actions';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(initialState, {\r\n  [addContact]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n  [deleteContact]: (state, action) => {\r\n    return state.filter(contact => contact.id !== action.payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({ contacts, filter });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducers from './reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: persistReducer(persistConfig, rootReducers),\r\n\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  ],\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","export const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { getContacts } from '../../redux/selectors';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const contact = {\n      name: e.currentTarget.name.value,\n      number: e.currentTarget.number.value,\n    };\n    if (contacts.find(el => el.name === contact.name)) {\n      alert(`${contact.name} is already in contacts!`);\n    } else {\n      dispatch(actions.addContact(contact));\n    }\n    reset();\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={s.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        ></input>\n      </label>\n      <label className={s.label}>\n        Phone:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={s.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        ></input>\n      </label>\n      <button type=\"submit\" className={s.button}>\n        ADD CONTACT\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { getContacts, getFilter } from '../../redux/selectors';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n  const dispatch = useDispatch();\n  const deleteContact = id => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <button className={s.deleteButton} onClick={() => deleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const changeFilter = e => dispatch(actions.filterContacts(e.target.value));\n\n  return (\n    <label className={s.label}>\n      Filter{' '}\n      <input\n        type=\"text\"\n        className={s.input}\n        name=\"filter\"\n        value={filterValue}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","// import { useState, useEffect, useMemo } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nimport './App.css';\n\nfunction App() {\n  // const [contacts, setContacts] = useState(() => {\n  //   return JSON.parse(localStorage.getItem('contacts')) ?? [];\n  // });\n\n  // const [filter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const visibleContacts = useMemo(() => {\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase()),\n  //   );\n  // }, [contacts, filter]);\n\n  // function changeFilter(e) {\n  //   setFilter(e.currentTarget.value);\n  // }\n\n  // function deleteContact(contactId) {\n  //   setContacts(contacts.filter(contact => contact.id !== contactId));\n  // }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2w9vp\",\"input\":\"ContactForm_input__3k_92\",\"button\":\"ContactForm_button__Pfqr0\"};"],"sourceRoot":""}